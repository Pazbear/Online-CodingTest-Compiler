<head>
  <link
    rel="stylesheet"
    href="//cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs/editor/editor.main.min.css"
  />
  <style>
    #container {
      height: 400px;
      border: 1px solid black;
    }
    .control-label {
      display: iline-block;
      position: relative;
      top: -4px;
      margin-right: 4px;
    }
    .language-picker {
      width: 220px;
      height: 30px;
      background-color: #fff;
      border: 1px solid #bbb;
    }
  </style>
  <script src="http://code.jquery.com/jquery-latest.min.js"></script>
  <script type="text/javascript">
    // F12 버튼 방지
    $(document).ready(function () {
      $(document).bind("keydown", function (e) {
        if (e.keyCode == 123 /* F12 */) {
          e.preventDefault();
          e.returnValue = false;
        }
      });
    });

    // 우측 클릭 방지
    document.onmousedown = disableclick;
    status = "Right click is not available.";

    function disableclick(event) {
      if (event.button == 2) {
        alert(status);
        return false;
      }
    }
  </script>
</head>
<body
  oncontextmenu="return false"
  onselectstart="return false"
  ondragstart="return false"
>
  <label class="control-label">Language</label>
  <select class="language-picker">
    <option>python</option>
    <option>java</option>
  </select>
  <div><%= selected_problem.name %><br /><br /></div>
  <div>
    <% for ( var n in selected_problem.content){ %>
    <%=selected_problem.content[n] %><br /><br />
    <%}%>
  </div>
  <div id="container"></div>
  <button id="submit">제출</button>
  <div id="answer"></div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.26.1/min/vs/loader.min.js"></script>
  <script type="module">
    import { io } from "https://cdn.socket.io/4.5.1/socket.io.esm.min.js";

    var editor;
    var socket;

    socket = io("http://localhost:5000");
    socket.on("connect", () => {
      socket.emit("exec", 500, 500);
      socket.on("result", (data) => {
        console.log(data);
        $("#answer").text(data.substring(12));
      });
      socket.on("init-complete", () => {
        require.config({
          paths: {
            vs: "https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.26.1/min/vs",
          },
        });
        require(["vs/editor/editor.main"], () => {
          $("#container").empty();
          editor = monaco.editor.create(document.getElementById("container"), {
            value: `<%= selected_problem.value %>`,
            language: "python",
            theme: "vs-dark",
          });
        });
        $("#submit").on("click", () => {
          socket.emit(
            "source",
            "<%= selected_problem.idx %>",
            editor.getValue()
          );
        });
      });
    });
    /*$(".language-picker").change(function () {
    console.log("changed");
    require(["vs/editor/editor.main"], () => {
      $("#container").empty();
      monaco.editor.create(document.getElementById("container"), {
        value: `def solution():
    answer =0
    return answer`,
        language: "python",
        theme: "vs-dark",
      });
    });
  });*/
  </script>
</body>
